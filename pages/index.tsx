import { useEffect, useState } from 'react';
import type { NextPage } from 'next'
import Head from 'next/head'
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';

import Task from '../types/task';

import Modal from '../components/modal';
import styles from '../styles/Home.module.css'

const Home: NextPage = () => {
  const [tasks, setTasks] = useState<Array<Task>>([]);
  const [openModal, setOpenModal] = useState(false);
  const [selectedTask, setSelectedTask] = useState<Task | null>(null);

  useEffect(()=>{
    fetch('/api/tasks').then(response => {
      response.json().then(tasksResponse => {
        const tasksToShow = tasksResponse.map((task: string, index:number) => {
          return {
            title: task,
            status: 'NEW',
            id: index
          }
        });
        setTasks(tasksToShow);
      })
    })
  }, [])

  const handlerOnClickTask = (task: Task) => {
    setSelectedTask(task);
    setOpenModal(true);
  }

  const updateTaskHandler = (task: Task) => {
    if(tasks && task){
      const tasksUpdated: Array<Task> = tasks.map((currentTask: Task) => {
        if(task.id === currentTask.id){
          return {
            ...currentTask,
            status: 'COMPLETED'
          }
        }
        return currentTask;
      });
      setTasks(tasksUpdated);
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Tasks list</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Tasks list ({tasks.length})</h1>
        {tasks.map((task, index) => <Card className={styles.card} onClick={() => handlerOnClickTask(task)}>
          <CardContent>
            <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
              Task {index + 1}
            </Typography>
            <Typography variant="h5" component="div">
              {task.title}
            </Typography>
          </CardContent>
          <CardActions>
            <Button size="small">Status: {task.status}</Button>
          </CardActions>
        </Card>)}
      </main>

      {selectedTask && <Modal open={openModal} setOpen={setOpenModal} index={1} task={selectedTask} updateTask={(task: Task)=> {
        updateTaskHandler(task)
      }}></Modal>}
    </div>
  )
}

export default Home
